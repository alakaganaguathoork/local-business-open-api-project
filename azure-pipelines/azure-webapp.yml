name: 'app-$(Date:yyyy-MM-dd)$(Rev:.r)'

trigger:
  branches:
    include:
      - azure-pipeline
  paths:
    include:
      - app/*

variables:
  azureServiceConnectorId: "7a9cf0e8-68d1-4cdc-82c7-d96cca6b8858"
  appName: "app-1-GD14wfd"
  appType: "webAppLinux"
  resourceGroupName: "resource-group-test"
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: "3.12"


pool:
  name: Local

stages:
  - stage: Build
    variables:
    - group: Main
    jobs:
    - job: CreateEnvFile
      steps:
      - bash: touch .env
        name: CreateEnvFile
        displayName: "Create .env file"
        workingDirectory: $(projectRoot)/app
      
      - bash: |
          echo "$(APP_ENV)" >> ./.env
          echo "$(X_RAPIDAPI_KEY)" >> ./.env
        name: SaveEnvVaribalesInFile
        displayName: "Save env varibales in .env"
        workingDirectory: $(projectRoot)/app
      
      - bash: |
          pip install --no-cache-dir -r requirements.txt
        name: InstallDependencies
        displayName: "Install Python dependencies"
        workingDirectory: $(projectRoot)/app
      
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: 'app'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
          replaceExistingArchive: true
        displayName: "Archive Python App"

  # - stage: Deploy
    # dependsOn: Build
    # condition: succeeded()
    # displayName: Deploy
    # jobs:
    # - job: Deploy
      # steps:
      - task: AzureWebApp@1
        inputs:
          azureSubscription: "$(azureServiceConnectorId)"
          appName: "$(appName)"
          appType: webAppLinux
          resourceGroupName: "$(resourceGroupName)"
          package: "$(Build.ArtifactStagingDirectory)/app.zip"
          runtimeStack: "PYTHON|3.12"
          startUpCommand: "gunicorn --bind=0.0.0.0 --timeout 600 app:app"
        displayName: "Deploy to Azure App Service"

