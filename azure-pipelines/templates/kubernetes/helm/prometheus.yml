parameters:
  - name: deploymentName
    type: string
  - name: dependsOn
    type: object
    default: []
  - name: environment
    type: string
  - name: awsRegion
    type: string
  - name: awsClusterName
    type: string

jobs:
  - deployment: ${{ parameters.deploymentName }}
    displayName: ${{ parameters.deploymentName }}
    dependsOn: ${{ parameters.dependsOn }}
    environment: ${{ parameters.environment }}
    variables:
      namespace: monitoring
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: Bash@3
              name: update_config
              displayName: aws eks update-kubeconfig
              condition: succeeded()
              inputs:
                targetType: inline
                script: |
                  aws eks update-kubeconfig \
                    --region ${{ parameters.awsRegion }} \
                    --name ${{ parameters.awsClusterName }}

            - task: Bash@3
              name: deploy_prometheus
              displayName: deploy prometheus
              condition: succeeded()
              inputs:
                targetType: inline
                script: |
                  helm uninstall prometheus -n $(namespace) || true
                  kubectl delete namespace $(namespace) --ignore-not-found

                  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
                  helm repo update
                  helm upgrade \
                    --install prometheus prometheus-community/prometheus \
                    --namespace $(namespace) \
                    --create-namespace \
                    --reuse-values \
                    --values $(System.DefaultWorkingDirectory)/kubernetes/helm/helpers/prometheus/prom-custom-values-aws.yaml

            # - task: Bash@3
              # name: prometheus_server_url
              # displayName: prometheus get server url
              # inputs:
                # targetType: inline
                # script: |
                  # export PROM_POD_NAME=$(kubectl get pods --namespace $(namespace) -l "app.kubernetes.io/name=prometheus,app.kubernetes.io/instance=prometheus" -o jsonpath="{.items[0].metadata.name}")
                  # export AM_POD_NAME=$(kubectl get pods --namespace $(namespace) -l "app.kubernetes.io/name=alertmanager,app.kubernetes.io/instance=prometheus" -o jsonpath="{.items[0].metadata.name}")
                  # export PG_POD_NAME=$(kubectl get pods --namespace $(namespace) -l "app=prometheus-pushgateway,component=pushgateway" -o jsonpath="{.items[0].metadata.name}")
# 
                  # echo "##vso[task.setvariable variable=PROM_POD_NAME;]$PROM_POD_NAME"
                  # echo "##vso[task.setvariable variable=AM_POD_NAME;]$AM_POD_NAME"
                  # echo "##vso[task.setvariable variable=PG_POD_NAME;]$PG_POD_NAME"
              # 
            # - task: Bash@3
              # name: prometheus_display_admin_password
              # displayName: prometheus display admin password
              # condition: succeeded()
              # inputs:
                # targetType: inline
                # script: |
                  # SERVICE_IP=$(kubectl get svc -n $(namespace) prometheus-server \
                    # -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
                  # echo "prometheus URL: $SERVICE_IP"
                  # echo "prometheus admin password: $(echo $prometheus_ADMIN_PASS)"
