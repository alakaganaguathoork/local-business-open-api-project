parameters:
  - name: stageName
    type: string

  - name: dependsOn
    type: string

  - name: k8sVersion
    type: string

stages:
  - stage: ${{ parameters.stageName }}
    displayName: Install kubectl
    dependsOn: ${{ parameters.dependsOn }}
    jobs:
      - job: DetectDependencies
        displayName: Check environment before kubectl installation
        steps:

          - checkout: none

          - task: Bash@3
            name: kubectl
            displayName: Check if kubectl already installed
            inputs:
               targetType: inline
               script: |
                 if command -v kubectl >/dev/null 2>&1; then
                   echo "kubectl exists"
                   echo "##vso[task.setvariable variable=installed;isOutput=true]true"
                 else
                   echo "kubectl not found"
                   echo "##vso[task.setvariable variable=installed;isOutput=true]false"
                 fi

          - task: Bash@3
            name: detect
            displayName: Detect Linux architecture
            inputs:
              targetType: inline
              script: |
                ARCH=$(uname -m)
                case $ARCH in
                  x86_64) KUBECTL_ARCH="amd64" ;;
                  aarch64) KUBECTL_ARCH="arm64" ;;
                  *) echo "Unsupported architecture: $ARCH"; exit 1 ;;
                esac
                echo "##vso[task.setvariable variable=kubectl_arch;isOutput=true]${KUBECTL_ARCH}"

      - job: InstallKubectl
        displayName: Install kubectl
        condition:  eq($(kubectl_installed), 'false')
        variables:
          kubectl_installed: $[ dependencies.DetectDependencies.outputs['kubectl.installed'] ]
          kubectl_arch: $[ dependencies.DetectDependencies.outputs['detect.kubectl_arch'] ]
          k8sVersion: ${{ parameters.k8sVersion}}
        steps:

          - checkout: none

          - ${{ if eq(parameters.k8sVersion, '') }}:
            - task: Bash@3
              name: InstallKubectlLatest
              displayName: Install latest kubectl
              inputs:
                targetType: inline
                script: |
                  echo "Detected architecture: $(kubectl_arch)"
                  KUBE_VER=$(curl -L -s https://dl.k8s.io/release/stable.txt)
                  echo "Installing kubectl version $KUBE_VER"
                  curl -LO "https://dl.k8s.io/release/${KUBE_VER}/bin/linux/$(kubectl_arch)/kubectl"
                  chmod +x kubectl && sudo mv kubectl /usr/local/bin/

          - ${{ if ne(parameters.k8sVersion, '') }}:
            - task: Bash@3
              name: InstallKubectlVersion
              displayName: Install kubectl v$(k8sVersion)
              inputs:
                targetType: inline
                script: |
                  echo "Detected architecture: $(kubectl_arch)"
                  KUBE_VER="v$(k8sVersion)"
                  echo "Installing kubectl version $KUBE_VER"
                  curl -LO "https://dl.k8s.io/release/${KUBE_VER}/bin/linux/$(kubectl_arch)/kubectl"
                  chmod +x kubectl && sudo mv kubectl /usr/local/bin/