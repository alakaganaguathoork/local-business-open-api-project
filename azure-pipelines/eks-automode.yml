name: $(Date:yyyy-MM-dd)$(Rev:.r)-$(Build.SourceBranchName)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - azure-pipelines/eks-automode.yml
      - azure-pipelines/templates/*

resources:
  webhooks:
    - webhook: TerraformApplied
      connection: TerraformAppliedServiceConnection

pool:
  name: 'Local'

variables:
  - group: AWS

  - name: projectRoot
    value: $(System.DefaultWorkingDirectory)
  - name: awsCredentials
    value: aws-oidc-federation
  - name: environment
    value: eks-$(Build.SourceBranchName)
  - name: awsCredentials
    value: aws-oidc-federation
  - name: awsRegion
    value: us-east-1 
  - name: awsClusterName
    value: terraform-test
  - name: k8sVersion
    value: 1.34.0

stages:
  - stage: Deploy
    displayName: Deploy resources to the '${{ variables.clusterName }}' EKS cluster
    jobs:
      - template: ./templates/setup-env.yml
      # Install all needed tools for this pipeline
        parameters:
          action: Install
          utilities: 
            - name: aws
            - name: kubectl
            - name: helm
      
      - template: ./templates/aws/jobs/configure.yml
      # Set up AWS long-lived creds
        parameters:
          dependsOn: installUtilities
          
      - template: ./templates/kubernetes/helm/argocd.yml
      # Install ArgoCD in a cluster using Helm
        parameters:
          deploymentName: Argocd
          dependsOn: Configure
          environment: $(environment)
          awsRegion: $(awsRegion)
          awsClusterName: $(awsClusterName)
      
      - template: ./templates/kubernetes/helm/kube-prom-stack.yml
      # Install monitoring in a cluster using Helm
        parameters:
          deploymentName: Monitoring
          dependsOn: Argocd
          environment: $(environment)

      - template: ./templates/kubernetes/jobs/deploy-to-cluster.yml
      # Install Local Business app in a cluster using Helm
        parameters:
          deploymentName: Deploy
          dependsOn: ArgoCD
          environment: $(environment)
          awsCredentials: $(awsCredentials)
          awsRegion: $(awsRegion)
          awsClusterName: $(awsClusterName)
          # manifests:
            # - name: namespace
              # manifest: $(System.DefaultWorkingDirectory)/terraform/aws/projects/eks-deployments/yamls/namespace.yml
            # - name: deployment
              # manifest: $(System.DefaultWorkingDirectory)/terraform/aws/projects/eks-deployments/yamls/deployments/nginx/deployment.yml
            # - name: service
              # manifest: $(System.DefaultWorkingDirectory)/azure-pipelines/service.yml 
          
      - template: ./templates/setup-env.yml
      # Clean agent's environemnt
        parameters:
          action: Uninstall
          dependsOn: Deploy
          utilities:
            - name: aws
            - name: kubectl