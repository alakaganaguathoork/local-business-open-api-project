services:
  local-business:
    # image: alakaganaguathoork/local-business:latest
    container_name: local-business
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      target: targetStage
    volumes:
      - "./app/:/app"
    env_file: 
      - path: ./app/.env
        required: true
    ports: 
      - "5400:5400"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./prometheus/prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml"
      - "prometheus_data:/prometheus"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
  
  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - "grafana_storage:/var/lib/grafana"
    ports:
      - "3000:3000"

volumes:
  prometheus_data: {}
  grafana_storage: {}
  
